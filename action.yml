name: "docker compose deploy"
description: "build using docker-compose-deploy tool"
inputs: 
  IMAGES:
     required: true
  AUTH_TOKEN:
     required: true
  DEPLOY_URL: 
    required: true
  USE_PULL_REPO:
    required: false
    default: "true"
runs:
  using: "composite"
  steps:

    # - name: change to pull repos
    #   shell: bash
    #   run:  |
    #     echo "PULL_IMAGES=$(echo '${{ steps.docker_build.outputs.images }}' | sed 's/([^.]*)/\1-pull/')" >> $GITHUB_ENV
    #   if: ${{ inputs.USE_PULL_REPO == 'true' }}

    # - name: change to pull repos
    #   shell: bash
    #   run:  echo "PULL_IMAGES=${{ steps.docker_build.outputs.images }}" >> $GITHUB_ENV
    #   if: ${{ inputs.USE_PULL_REPO == 'false' }}

    # - name: deploy
    #   shell: bash
    #   run:  |
    #     curl -H 'X-Authorization: ${{ secrets.AUTH_TOKEN }}' -H 'X-Deploy-Tags: ${{ env.PULL_IMAGES }}' ${{ inputs.DEPLOY_URL }} 


    - name: change to pull repos
      shell: bash
      id: set_pull_repos
      run:  |
        echo "images=$(echo '${{ inputs.IMAGES }}' | sed 's/\(^\| \)\([^.]*\)/ \2-pull/g')" >> $GITHUB_OUTPUT
      if: ${{ inputs.USE_PULL_REPO == 'true' }}

    - name: deploy from pull repos
      shell: bash
      run:  |
        curl -f -H 'X-Authorization: ${{ inputs.AUTH_TOKEN }}' -H "X-Deploy-Tags: ${{ steps.set_pull_repos.outputs.images }}" ${{ inputs.DEPLOY_URL }} 
      if: ${{ inputs.DEPLOY_URL != 'INVALID' && inputs.USE_PULL_REPO == 'true' }}

    - name: deploy
      shell: bash
      run:  |
        curl -f -H 'X-Authorization: ${{ inputs.AUTH_TOKEN }}' -H 'X-Deploy-Tags: ${{ inputs.IMAGES}}' ${{ inputs.DEPLOY_URL }} 
      if: ${{ inputs.DEPLOY_URL != 'INVALID' && inputs.USE_PULL_REPO == 'false' }}
